8 位 1 字节
32位系统中，int为4字节，系统分配4*8位，即取值范围在2^32内
1111 1111 1111 1111 1111 1111 1111 1111

整形：

int（整形， 32位系统中范围 -2147483648～2147483647，也就是2^32-1）
unsigned int（无符号，32位系统中范围0~4294967295）
signed int（有符号，int类型默认是有符号的，int实际上是signed int ，通常省略signed）

char（字符型）  //  'a' = 97
unsigned char    
signed char 

short（短整型，可修饰int ）
unsigned short [int]    
signed short [int] 

long（长整形，可修饰int 、double）
unsigned long [int]    
signed long [int]

浮点型：
float 
double 

构造类型：

数组类型
结构体类型 struct 
枚举类型 enum 
联合类型 union

数据在内存中存放：
内存是一种存储器，地址就像门牌号一样
计算机把存储在存储器上的所有信息都数字化了，在计算机存储中都是0和1的二进制


对于整形来说，数据存放内存中的是补码
在计算机系统中，数值一律用补码来表示和存储
使用补码，可以将符号位和数值域统一处理
加法和减法也可以统一处理（CPU只有加法器）
补码与原码相互转换，其运算过程是相同的， 不需要额外的硬件电路

大端（存储）模式，指数据的低位保存在内存的高地址中，而数据的高位，保存在内存的低地址中
小端 模式，指数据的低位保存在内存的低地址中，而数据的高位,，保存在内存的高地址中

如：一个16bit的short型 a
在内存中的地址为 0x0010，a 的值为 0x1122
其中0x11为高字节，0x22为低字节
对于大端模式，就将0x11放在低地址中，即0x0010中，0x22放在高地址中，即0x0011中
小端模式则刚好相反
我们常用的X86结构是小端模式
